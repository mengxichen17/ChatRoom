{"ast":null,"code":"var _jsxFileName = \"/Users/mengxi/Programming/NimbleChatRoom/nimble_chat_room/src/App.js\";\nimport React, { Component } from 'react';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ChatWindow from './components/ChatWindow/ChatWindow2';\nimport Greeting from './components/Greeting/Greeting';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport socketIO from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketIO.connect('http://localhost:4000');\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.onButtonUpvote = message_id => {\n      fetch('http://localhost:4000/chathistory/upvote', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: message_id\n        })\n      });\n    };\n    this.onButtonDownvote = message_id => {\n      fetch('http://localhost:4000/chathistory/downvote', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: message_id\n        })\n      });\n    };\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      // Receive the sent message\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      route: 'signin',\n      isSignedIn: false,\n      chatHistory: [],\n      user: {\n        name: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  componentDidMount() {\n    fetch('http://localhost:4000/chathistory', {\n      method: 'get'\n      // headers: {'Content-Type': 'application/json'},\n    }).then(response => response.json()).then(chatHistory => {\n      const chatHistorySorted = chatHistory.sort((a, b) => {\n        // Sort the array of messages (in json) by the message's time\n        const timeA = new Date(a.time);\n        const timeB = new Date(b.time);\n        return timeA - timeB;\n      });\n      const result = chatHistorySorted.map(({\n        name,\n        message\n      }) => ({\n        name,\n        message\n      }));\n      this.setState({\n        chatHistory: result\n      });\n    }).catch(err => console.log('Error fetching chat history:', err));\n  }\n  render() {\n    const {\n      isSignedIn,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedin: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Greeting, {\n          name: this.state.user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n          socket: socket,\n          onRouteChange: this.onRouteChange,\n          username: this.state.user.name,\n          chatHistory: this.state.chatHistory,\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit,\n          onButtonUpvote: this.onButtonUpvote,\n          onButtonDownvote: this.onButtonDownvote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ChatWindow","Greeting","FaceRecognition","Signin","Register","socketIO","jsxDEV","_jsxDEV","socket","connect","App","constructor","loadUser","data","setState","user","id","name","entries","joined","onButtonUpvote","message_id","fetch","method","headers","body","JSON","stringify","onButtonDownvote","onInputChange","event","console","log","target","value","onButtonSubmit","onRouteChange","route","isSignedIn","state","input","chatHistory","componentDidMount","then","response","json","chatHistorySorted","sort","a","b","timeA","Date","time","timeB","result","map","message","catch","err","render","className","children","isSignedin","fileName","_jsxFileName","lineNumber","columnNumber","username"],"sources":["/Users/mengxi/Programming/NimbleChatRoom/nimble_chat_room/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ChatWindow from './components/ChatWindow/ChatWindow2';\nimport Greeting from './components/Greeting/Greeting';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport socketIO from 'socket.io-client';\nconst socket = socketIO.connect('http://localhost:4000');\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      route: 'signin',\n      isSignedIn: false,\n      chatHistory: [],\n      user: {\n        name: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/chathistory', {\n                method: 'get',\n                // headers: {'Content-Type': 'application/json'},\n            })\n          .then(response => response.json())\n          .then(chatHistory => {\n            const chatHistorySorted = chatHistory.sort((a, b) => {\n              // Sort the array of messages (in json) by the message's time\n              const timeA = new Date(a.time);\n              const timeB = new Date(b.time);\n              return timeA - timeB;\n            });\n            const result = chatHistorySorted.map(({name, message}) => ({name, message}));\n            this.setState({chatHistory: result});\n          })\n          .catch(err => console.log('Error fetching chat history:', err))\n          ;\n  }  \n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      entries: data.entries,\n      joined: data.joined\n      }\n    })\n  }\n\n  onButtonUpvote = (message_id) => {\n    fetch('http://localhost:4000/chathistory/upvote', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: message_id\n            })\n          })\n    \n  }\n\n  onButtonDownvote = (message_id) => {\n    fetch('http://localhost:4000/chathistory/downvote', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: message_id\n            })\n          })\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    // Receive the sent message\n    \n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedin={isSignedIn} onRouteChange={this.onRouteChange}/>\n        <Logo />\n        { route === 'home'\n          ? <div>\n          <Greeting \n            name={this.state.user.name}\n          />\n          <ChatWindow\n            socket={socket}\n            onRouteChange={this.onRouteChange}\n            username={this.state.user.name}\n            chatHistory={this.state.chatHistory}\n            onInputChange={this.onInputChange} \n            onButtonSubmit={this.onButtonSubmit}\n            onButtonUpvote={this.onButtonUpvote}\n            onButtonDownvote={this.onButtonDownvote}\n          />\n          {/* <FaceRecognition /> */}\n        </div>\n          : (\n            route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n          \n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}