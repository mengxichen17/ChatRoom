{"ast":null,"code":"var _jsxFileName = \"/Users/mengxi/Programming/NimbleChatRoom/nimble_chat_room/src/components/ChatWindow/ChatBody.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Message from './Message';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBody = ({\n  messages,\n  lastMessageRef,\n  onRouteChange,\n  username,\n  socket\n}) => {\n  _s();\n  //   const navigate = useNavigate();\n  const [currUpvotes, setCurrUpvotes] = useState(0);\n  const [activeMessageUpButton, setActiveMessageUpButton] = React.useState(\"\");\n\n  // useEffect(() => {\n  //     socket.on('initialization', (data) => setChatHistory([...chatHistory, data[0]]));\n  // }, [socket, chatHistory]);\n\n  // console.log(\"FROM chatbody\", chatHistory);\n\n  const handleLeaveChat = () => {\n    // localStorage.removeItem('userName');\n    // navigate('/');\n    onRouteChange('signin');\n    window.location.reload();\n  };\n\n  // const formatTime = (time) => {\n  //     let date = time.split(/[T.]+/g);\n  //     date = date.slice(0, -1);\n  //     return date.join(' ');\n  // }\n\n  // const handleUpvote = (e, message_id) => {\n  //     e.preventDefault();\n  //     // if (message.trim() && localStorage.getItem('userName')) {\n  //     if (message_id) {\n  //         socket.emit('message_upvote', {\n  //           message_id: message_id,\n  //         });\n  //     }\n  //     setActiveMessageUpButton(message_id);\n  //     setCurrUpvotes(currUpvotes+1);\n  // }\n\n  // const handleDownvote = (e, message_id) => {\n  //     e.preventDefault();\n  //     if (message_id) {\n  //         socket.emit('message_downvote', {\n  //             message_id: message_id,\n  //         })\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat__mainHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Public Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leaveChat__btn\",\n        onClick: handleLeaveChat,\n        children: \"LEAVE CHAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message__container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n      // message.name === username ? (\n      //     <div className=\"message__chats\" key={message.id}>\n      //         <p className=\"sender__name\">{`You ${formatTime(message.time)}`}</p>\n      //         <div className=\"message__sender\">\n      //             <p>{message.message}</p>\n      //             <div className=\"vote__buttons pointer inline-flex right\">\n      //                 <button className=\"vote__button\" onClick={(e) => handleUpvote(e, message.message_id)}>Up</button> \n      //                 <button className=\"vote__button\" onClick={(e) => handleDownvote(e, message.message_id)}>Down</button>\n      //             </div>\n      //         </div>\n      //     </div>\n\n      // ) : (\n      //     <div className=\"message__chats\" key={message.id}>\n      //         <p className=\"sender__other_name\">{`${message.name} ${formatTime(message.time)}`}</p>\n      //         <div className=\"message__recipient\">\n      //             <p>{message.message}</p>\n      //             <div className=\"vote__buttons pointer inline-flex left\">\n      //                 <button className=\"vote__other_button\" onClick={(e) => handleUpvote(e, message.message_id)}>Up</button> \n      //                 <button className=\"vote__other_button\" onClick={(e) => handleDownvote(e, message.message_id)}>Down</button>\n      //             </div>\n      //         </div>\n      //     </div>\n      // )\n      ), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: lastMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBody, \"RXvu6GDDcxH+YAmxy8CEEyNWLE0=\");\n_c = ChatBody;\nexport default ChatBody;\nvar _c;\n$RefreshReg$(_c, \"ChatBody\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBody","messages","lastMessageRef","onRouteChange","username","socket","_s","currUpvotes","setCurrUpvotes","activeMessageUpButton","setActiveMessageUpButton","handleLeaveChat","window","location","reload","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","ref","_c","$RefreshReg$"],"sources":["/Users/mengxi/Programming/NimbleChatRoom/nimble_chat_room/src/components/ChatWindow/ChatBody.js"],"sourcesContent":["import React, { useEffect, useState, useRef }  from 'react';\nimport Message from './Message';\n// import { useNavigate } from 'react-router-dom';\n\nconst ChatBody = ({ messages, lastMessageRef, onRouteChange, username, socket }) => {\n//   const navigate = useNavigate();\n    const [currUpvotes, setCurrUpvotes] = useState(0);\n    const [activeMessageUpButton, setActiveMessageUpButton] = React.useState(\"\");\n\n    // useEffect(() => {\n    //     socket.on('initialization', (data) => setChatHistory([...chatHistory, data[0]]));\n    // }, [socket, chatHistory]);\n\n    // console.log(\"FROM chatbody\", chatHistory);\n\n    const handleLeaveChat = () => {\n        // localStorage.removeItem('userName');\n        // navigate('/');\n        onRouteChange('signin');\n        window.location.reload();\n    };\n\n    // const formatTime = (time) => {\n    //     let date = time.split(/[T.]+/g);\n    //     date = date.slice(0, -1);\n    //     return date.join(' ');\n    // }\n    \n    // const handleUpvote = (e, message_id) => {\n    //     e.preventDefault();\n    //     // if (message.trim() && localStorage.getItem('userName')) {\n    //     if (message_id) {\n    //         socket.emit('message_upvote', {\n    //           message_id: message_id,\n    //         });\n    //     }\n    //     setActiveMessageUpButton(message_id);\n    //     setCurrUpvotes(currUpvotes+1);\n    // }\n\n    // const handleDownvote = (e, message_id) => {\n    //     e.preventDefault();\n    //     if (message_id) {\n    //         socket.emit('message_downvote', {\n    //             message_id: message_id,\n    //         })\n    //     }\n    // }\n\n    return (\n        <>\n        <header className=\"chat__mainHeader\">\n            <p>Public Room</p>\n            <button className=\"leaveChat__btn\" onClick={handleLeaveChat}>\n            LEAVE CHAT\n            </button>\n        </header>\n\n        {/*This shows messages sent from you*/}\n        <div className=\"message__container\">\n            {messages.map((message) =>\n            <Message message={message} username={username}/>\n            // message.name === username ? (\n            //     <div className=\"message__chats\" key={message.id}>\n            //         <p className=\"sender__name\">{`You ${formatTime(message.time)}`}</p>\n            //         <div className=\"message__sender\">\n            //             <p>{message.message}</p>\n            //             <div className=\"vote__buttons pointer inline-flex right\">\n            //                 <button className=\"vote__button\" onClick={(e) => handleUpvote(e, message.message_id)}>Up</button> \n            //                 <button className=\"vote__button\" onClick={(e) => handleDownvote(e, message.message_id)}>Down</button>\n            //             </div>\n            //         </div>\n            //     </div>\n                \n            // ) : (\n            //     <div className=\"message__chats\" key={message.id}>\n            //         <p className=\"sender__other_name\">{`${message.name} ${formatTime(message.time)}`}</p>\n            //         <div className=\"message__recipient\">\n            //             <p>{message.message}</p>\n            //             <div className=\"vote__buttons pointer inline-flex left\">\n            //                 <button className=\"vote__other_button\" onClick={(e) => handleUpvote(e, message.message_id)}>Up</button> \n            //                 <button className=\"vote__other_button\" onClick={(e) => handleDownvote(e, message.message_id)}>Down</button>\n            //             </div>\n            //         </div>\n            //     </div>\n            // )\n            )}\n\n            {/*This is triggered when a user is typing*/}\n            {/* <div className=\"message__status\">\n            <p>Someone is typing...</p>\n            </div> */}\n\n            <div ref={lastMessageRef} />\n        </div>\n        </>\n    );\n};\n\nexport default ChatBody;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAS,OAAO;AAC3D,OAAOC,OAAO,MAAM,WAAW;AAC/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,cAAc;EAAEC,aAAa;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpF;EACI,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGnB,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC;;EAE5E;EACA;EACA;;EAEA;;EAEA,MAAMkB,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;IACAR,aAAa,CAAC,QAAQ,CAAC;IACvBS,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAQmB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAChClB,OAAA;QAAAkB,QAAA,EAAG;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClBvB,OAAA;QAAQmB,SAAS,EAAC,gBAAgB;QAACK,OAAO,EAAEV,eAAgB;QAAAI,QAAA,EAAC;MAE7D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGTvB,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,GAC9Bd,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBACtB1B,OAAA,CAACF,OAAO;QAAC4B,OAAO,EAAEA,OAAQ;QAACnB,QAAQ,EAAEA;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;MAC/C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,CAAC,eAODvB,OAAA;QAAK2B,GAAG,EAAEtB;MAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAACd,EAAA,CA7FIN,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA+Fd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}